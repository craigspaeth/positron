extends ../root/layout

block body
  h1 Posts
  :markdown
    The main data of Artsy Writer. Editorial written by [users](#{API_PATH}/users.html).

  br
  h2 GET #{API_PATH}/posts
  p Retrieve a set of posts.
  pre.
    curl -v -L GET "#{API_URL}/posts" -H 'X-Access-Token: #{user && user.access_token}'
  p Example response:
  pre.
    {
      total: 100,
      count: 5,
      results: [
        {
          title: 'Highlights from The Armory Show'
          //...
        }
      ]
    }
  h3 Accepted query params:
  :markdown
    **sort:** Sort posts by any single field. Prefix with `-` for descending e.g. `?sort=-title`

    **offset:** Used for pagination, e.g. `?offset=100`.

    **published:** Filter between published posts & drafts. e.g. `?published=true`

    **author_id:** Filter posts from a user e.g. `?author_id=4d8cd73191a5c50ce200002a`

  br
  h2 GET #{API_PATH}/posts/:id
  p Retrieve a post.
  pre.
    curl -v -L GET "#{API_URL}/posts/:id" -H 'X-Access-Token: #{user && user.access_token}'
  +auth-required(' to view unpublished posts')
  p Example response:
  pre.
    {
      id: '54276766fd4f50996aeca2b8'
      title: 'Top Ten Booths',
      teaser: 'Just before the lines start forming...',
      thumbnail: 'http://kitten.com',
      tags: ['Fair Coverage', 'Magazine']
      content_title: 'Top Ten Booths at miart 2014',
      preamble: 'Just before the lines start forming...',
      author_id: '4d8cd73191a5c50ce200002a',
      published: true,
      published_at: '1994-11-05T08:15:30-05:00',
      updated_at: '1994-11-05T08:15:30-05:00',
      sections: [
        {
          type: 'image',
          url: 'http://gemini.herokuapp.com/123/miaart-banner.jpg'
        },
        {
          type: 'text',
          body: '## 10. Lisson Gallery\nMia Bergeron merges the _personal_ and _universal_...',
        },
        {
          type: 'artworks',
          ids: ['5321b73dc9dc2458c4000196', '5321b71c275b24bcaa0001a5']
        },
        {
          type: 'text',
          body: 'Check out this video art:',
        },
        {
          type: 'video',
          url: 'http://youtu.be/yYjLrJRuMnY'
        }
      ]
    }

  br
  h2 POST #{API_PATH}/posts
  p Create a post.
  +auth-required()
  pre.
    curl -v -L POST "#{API_URL}/posts" -d "title=Example&author_id=#{user && user.id}" -H 'X-Access-Token: #{user && user.access_token}'
  h3 Accepted body params:
  p See the example response above for reference. The accepted body params are
    |  a subset of that schema.
  :markdown
    **title:** The title used in the "Summary View".

    **teaser:** The teaser used in the "Summary View".

    **thumbnail:** The thumbnail image used in the "Summary View".

    **tags:** Array of strings labeling the post.

    **content_title:** The headline title used in the content of the post.

    **preamble:** A beginning line of text in the content of the post.

    **published:** Boolean determining if the post is visible to the public.

    **sections:** An array of section data that creates the larger body of the post.
    Section data can come in a variety of forms listed below.

    Image—Pass a `type` of `'image'` and a `url` pointing to the image.
    It's up to the client to handle storage of the image file.

    Text—Pass a `type` of `'text'` and a `body` containing markdown formatting.

    Artworks—Pass a `type` of `'artworks'` and an array of `ids` pointing to
    their Artsy API `id`s.

    Video—Pass a `type` of `'video'` and a `url` pointing to the YouTube or
    Vimeo url.

  br
  h2 PUT #{API_PATH}/posts/:id
  p Update a post.
  +auth-required()
  pre.
    curl -X PUT "#{API_URL}/posts/:id" -d "title=ExampleChanged" -H 'X-Access-Token: #{user && user.access_token}'
  h3 Accepted body params:
  p Same body params as the POST endpoint with the addition of:
  :markdown
    **author_id:** An admin can change the owner of the post by passing another user's Artsy ID.

  br
  h2 DELETE #{API_PATH}/posts/:id
  pre.
    curl -X DELETE "#{API_URL}/posts/:id" -H 'X-Access-Token: #{user && user.access_token}'
  p Delete a post.
  +auth-required()
